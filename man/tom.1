.\" Man page generated from reStructuredText.
.
.TH "TOM" "1" "Oct 03, 2018" "" "Tom"
.SH NAME
tom \- Tom Documentation
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH SRC
.SS jServe module
.INDENT 0.0
.TP
.B class jServe.jServe(callbacks={}, port=9699, host=\(aqRKJMBL0191\(aq, certfile=None)
Bases: \fI\%threading.Thread\fP
.sp
Process a json request from client, route to callback function, return json to client
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBcallbacks\fP (\fI\%dict\fP) – Dictionary to use as callback registry \fIsee add_callback()\fP
.IP \(bu 2
\fBport\fP (\fI\%int\fP) – Port number to use
.IP \(bu 2
\fBhost\fP (\fI\%str\fP) – Hostname for server
.IP \(bu 2
\fBcertfile\fP (\fI\%str\fP) – File to use for SSL \fI(if * **None*\fP \fISSL will not be used)\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B output = \(aqjson | xml\(aq
default is json, type of output to return
.UNINDENT
.INDENT 7.0
.TP
.B add_callback(method, path, cfunc)
Register callback method, function should accept json object as data.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBmethod\fP (\fI\%str\fP) – Method in URL POST, GET, PUT, etc..
.IP \(bu 2
\fBpath\fP (\fIre\fP) – Path in URL after host ‘/.*’, regular expression
.IP \(bu 2
\fBcfunc\fP (\fIfunction\fP) – call back function refernce pointer (see default_callback() for details)
.UNINDENT
.UNINDENT
.sp
Note user defined functions need to increment counter
.UNINDENT
.INDENT 7.0
.TP
.B callback(method, path, jdata)
Find the callback based on method and path, the call it with jdata
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBmethod\fP (\fI\%str\fP) – Method from URL, used as primary key in callbacks
.IP \(bu 2
\fBpath\fP (\fI\%str\fP) – path from URL
.IP \(bu 2
\fBjdata\fP (\fIjson\fP) – 
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B default_callback(path, jdata, status=400, counter=0)
Call back to execute if one is not foundself.
.sp
\fBModel callbacks on this function, counter should be incremented\fP
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBpath\fP (\fI\%str\fP) – path in calling URL
.IP \(bu 2
\fBjdata\fP (\fIjson\fP) – jquery data to process (required)
.IP \(bu 2
\fBstatus\fP (\fI\%int\fP) – last status
.IP \(bu 2
\fBcounter\fP (\fI\%int\fP) – How many times method path did a call back
.UNINDENT
.TP
.B Returns
Returns tupple with path, json object, status, and counter
.TP
.B Return type
path(\fI\%str\fP),json(json), status(\fI\%int\fP), counter(\fI\%int\fP)
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B http_reply(data, status=200)
Wraps json data in HTTP response
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%str\fP) – converted json string
.IP \(bu 2
\fBstatus\fP (\fI\%int\fP) – Status to return see stats table below
.UNINDENT
.TP
.B Returns
HTTPD respnose string
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B process_url(args)
Break up URL string recieved in method, path, json
.INDENT 7.0
.TP
.B Parameters
\fBargs\fP (\fI\%str\fP) – URL string
.TP
.B Returns
tupple with data to be used for callbacks
.TP
.B Return type
method(\fI\%str\fP), path(\fI\%str\fP), json(json)
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B run()
Opens connection, and creates Thread object to handle requests
.UNINDENT
.INDENT 7.0
.TP
.B run_url_thread(conn, addr)
Called from run(), process a single user request in a thread
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBconn\fP (\fIsocket\fP) – came from accept()
.IP \(bu 2
\fBaddr\fP (\fI\%list\fP) – TCPIP address Information
.UNINDENT
.TP
.B Returns
sends response to Socket
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B sig_exit(signal, fname)
Receive signal to exit from OS
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBsignal\fP (\fIsignal\fP) – signal received
.IP \(bu 2
\fBfname\fP (\fIfile\fP) – File name
.UNINDENT
.TP
.B Returns
Exits program
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B start()
start() : will start the server, will not execute any other commands afterwards
.INDENT 7.0
.TP
.B Parameters
\fBNone\fP – 
.TP
.B Returns
None
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.IP \(bu 2
genindex
.IP \(bu 2
modindex
.IP \(bu 2
search
.UNINDENT
.SH AUTHOR
Tom Papadopoulos
.SH COPYRIGHT
2018, Tom Papadopoulos
.\" Generated by docutils manpage writer.
.
